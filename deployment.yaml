apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tfemily-db-pvc
  namespace: tfemily
  labels:
    app: tfemily-db
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: tfemily-web-pvc
  namespace: tfemily
  labels:
    app: tfemily-web
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: do-block-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfemily-db-deployment
  namespace: tfemily
  labels:
    app: tfemily-db
    type: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tfemily-db
  strategy: {}
  template:
    metadata:
      labels:
        app: tfemily-db
        type: database
    spec:
      containers:
        - name: mariadb
          image: mariadb
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3306
              name: db-port
          envFrom:
            - secretRef:
                name: tfemily-db-secret
          volumeMounts:
            - name: db-pvc
              mountPath: /var/lib/mysql
      volumes:
        - name: db-pvc
          persistentVolumeClaim:
            claimName: tfemily-db-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tfemily-web-deploy
  namespace: tfemily
  labels:
    app: tfemily-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tfemily-web
  strategy: 
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: tfemily-web
    spec:
      containers:
      - image: tfes8/tfemily-web:latest
        imagePullPolicy: Always
        name: tfemily-web
        ports:
        - containerPort: 8080
        resources: {}
        env:
        - name: ALLOWED_ORIGINS
          value: "https://tfemily.com"
        - name: SPRING_OPTS
          value: "--spring.profiles.active=--spring.profiles.active=jpa-prod,db-docker-mysql,twitter,discord,aws-local --spring.messages.basename=file:/messages,messages --server.port=8080 --spring.jpa.hibernate.ddl-auto=update --photoDirectory=/web-pvc/photos/ --applicationUrl=https://tfemily.com --mixednutz.network-info.id=tfemily --mixednutz.network-info.host-name=tfemily.com --mixednutz.network-info.display-name=TFEmily.com --mixednutz.email.display-name=TFEmily.com --mixednutz.email.no-reply=noreply@tfemily.com --ads-txt=file:/ads.txt --externalTemplateFolder=/templates/ --themoviedb.apikey=${TMDB_API_KEY}"
#This is in the spring_opts instead
#        - name: PHOTO_DIRECTORY
#          value: "/web-pvc/photos/"
        - name: SMTP_HOST
          valueFrom:
            secretKeyRef: 
              key: SMTP_HOST
              name: tfemily-email-smtp-secret
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef: 
              key: SMTP_USERNAME
              name: tfemily-email-smtp-secret
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef: 
              key: SMTP_PASSWORD
              name: tfemily-email-smtp-secret
        - name: TWITTER_CONSUMER_KEY
          valueFrom:
            secretKeyRef: 
              key: TWITTER_CONSUMER_KEY
              name: tfemily-twitter-secret
        - name: TWITTER_CONSUMER_SECRET
          valueFrom:
            secretKeyRef: 
              key: TWITTER_CONSUMER_SECRET
              name: tfemily-twitter-secret
        - name: DISCORD_TOKEN
          valueFrom:
            secretKeyRef: 
              key: DISCORD_TOKEN
              name: tfemily-discord-secret
        - name: TMDB_API_KEY
          valueFrom:
            secretKeyRef: 
              key: TMDB_API_KEY
              name: tfemily-themoviedb-secret
        - name: DISCORD_CHANNEL_ID
          value: "786070647369498637"
        - name: MYSQL_DB_HOST
          value: "tfemily-db-svc"
        - name: MYSQL_DB_PORT
          value: "3306"
        - name: MYSQL_DB_NAME
          valueFrom:
            secretKeyRef: 
              key: MYSQL_DATABASE
              name: tfemily-db-secret
        - name: MYSQL_DB_USERNAME
          valueFrom:
            secretKeyRef: 
              key: MYSQL_USER
              name: tfemily-db-secret
        - name: MYSQL_DB_PASSWORD
          valueFrom:
            secretKeyRef: 
              key: MYSQL_PASSWORD
              name: tfemily-db-secret
        volumeMounts:
        - name: web-pvc
          mountPath: /web-pvc
      volumes:
      - name: web-pvc
        persistentVolumeClaim:
          claimName: tfemily-web-pvc
      imagePullSecrets:
      - name: dockerhub
---
apiVersion: v1
kind: Service
metadata:
  name: tfemily-web-svc
  namespace: tfemily
  labels:
    app: tfemily-web
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: tfemily-web
---
apiVersion: v1
kind: Service
metadata:
  name: tfemily-db-svc
  namespace: tfemily
  labels:
    app: tfemily-db
spec:
  ports:
  - port: 3306
    targetPort: 3306
  selector:
    app: tfemily-db
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: tfemily-web-ingress
  namespace: tfemily
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
#     #nginx.ingress.kubernetes.io/ssl-passthrough: "true"
#     cert-manager.io/cluster-issuer: "letsencrypt-staging"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Access-Control-Allow-Origin: $http_origin";
spec:
  tls:
  - hosts:
    - tfemily.com
    secretName: tfemily-web-tls
  rules:
  - host: tfemily.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: tfemily-web-svc
            port: 
              number: 8080

